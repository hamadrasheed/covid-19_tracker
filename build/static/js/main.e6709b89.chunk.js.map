{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","components/Footer/Footer.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Footer/Footer.module.css","images/image.png"],"names":["module","exports","url","fetchData","country","a","dynamicUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","initialDailyData","fetchApi","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","value","options","legend","display","title","text","className","styles","container","Cards","Date","toDateString","Grid","spacing","justify","item","component","Card","cx","card","infected","xs","md","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","event","target","i","key","Footer","footer","App","state","fetchedData","setState","this","image","src","coronaImage","alt","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6709b89.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let dynamicUrl = url;\n\n  if (country) {\n    dynamicUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(dynamicUrl);\n\n    const modifiedData = { confirmed, recovered, deaths, lastUpdate };\n\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const initialDailyData = await fetchDailyData();\n      setDailyData(initialDailyData);\n      console.log(initialDailyData);\n    };\n\n    fetchApi();\n  }, []);\n\n  const lineChart = dailyData ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\nimport styles from \"./Cards.module.css\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  const date = new Date(lastUpdate).toDateString();\n  if (!confirmed) {\n    return <h2>\"Loading ... \"</h2>;\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          className={cx(styles.card, styles.infected)}\n          xs={12}\n          md={3}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">{date}</Typography>\n            <Typography variant=\"body2\">\n              Number of active cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          component={Card}\n          className={cx(styles.card, styles.recovered)}\n          xs={12}\n          md={3}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recoveries\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={1}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">{date}</Typography>\n            <Typography variant=\"body2\">\n              Number of recovered patients from COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          component={Card}\n          className={cx(styles.card, styles.deaths)}\n          xs={12}\n          md={3}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={0.7}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">{date}</Typography>\n            <Typography variant=\"body2\">\n              Number of deaths caused by COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./CountryPicker.module.css\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport { fetchCountries } from \"../../api\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n    fetchApi();\n  }, [setFetchedCountries]);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(event) => handleCountryChange(event.target.value)}\n      >\n        <option value=\"\">Global</option>\n\n        {fetchedCountries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React from \"react\";\nimport styles from \"./Footer.module.css\";\n\nconst Footer = () => {\n  return (\n    <div className={styles.footer}>\n      <div className=\"footer-copyright text-center py-3\">\n        © 2020 Mini Project by Hamad Rasheed.\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { Card, CountryPicker, Chart, Footer } from \"./components\";\nimport { fetchData } from \"./api\";\nimport styles from \"./App.module.css\";\nimport coronaImage from \"./images/image.png\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass App extends Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n    console.log(fetchedData);\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country });\n    console.log(fetchedData);\n  };\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div>\n        <div className={styles.container}>\n          <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\n          <Card data={data} />\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\n          <Chart data={data} country={country} />\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}